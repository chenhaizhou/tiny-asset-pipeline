#!/usr/bin/env node

var path = require('path');
var fs = require('fs');
var os = require('os');
var daemon = require('daemon');
var release = require('../index.js');
var conf = require("argsparser").parse();

if(process.argv.length === 2){
    console.error('#package project#: tiny-asset-pipeline -from sourceDirectoty -to destinationDirectoty [-mappingFile /tmp/md5_mapping.json] [-verbose or -v] [-noRewriteFileName]');
    console.error('#start    server#: tiny-asset-pipeline -start  [-port 8888] [-root assetsRootDirectoty]');
    console.error('#stop     server#: tiny-asset-pipeline -stop');
    process.exit(1);
}

var port = parseInt(conf['-port'], 10) || 8888;
var pid = path.join(os.tmpDir(), port + '.node_pid');
if(conf['-start'] || conf['-restart']){
    kill();

    var stdout = pid + '_stdout.log', stderr = pid + '_stderr.log';
    console.log(">>>tiny-asset-pipeline's stdout log: ", stdout);
    console.log(">>>tiny-asset-pipeline's stderr log: ", stderr);
    daemon.daemon(path.resolve(__dirname,'..','lib','server','httpd.js'), ['-port',port,'-root',conf['-root']],{
        stdout : fs.openSync(stdout, 'w'),
        stderr : fs.openSync(stderr, 'w')
    })
    return;
}
if(conf['-stop']){
    kill();
    process.exit(0);
}

function kill(){
    if(fs.existsSync(pid)){
        try{
            process.kill(fs.readFileSync(pid,'utf-8'));
            fs.unlinkSync(pid);
        }catch(e){
            
        }
    }
}
release(conf);
